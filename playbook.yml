---
- name: System Setup
  hosts: all
  become: true

  tasks:

    ### Update all DNF security packages
    # Consider using the DNF module (https://docs.ansible.com/ansible/latest/collections/ansible/builtin/dnf_module.html)
    # Should this be its own role? Here's a reference to creating roles (https://www.redhat.com/sysadmin/developing-ansible-role)
    # If we create a role, we need to run it from this playbook (https://docs.ansible.com/ansible/latest/collections/ansible/builtin/include_role_module.html)

    - name: Include DNF security package update role
      ansible.builtin.include_role:
        name: security_package_update

    ### Create a new user & make admin group the primary group for new user, and add user to wheel group
    # Consider using the user module (https://docs.ansible.com/ansible/latest/collections/ansible/builtin/user_module.html)
    # Should we use a variable (https://docs.ansible.com/ansible/latest/playbook_guide/playbooks_variables.html) for the user name?
    # Should we create separate roles for the user creation and user check steps, or do they logically fit together in a single role?


    ### Check that user is present and debug/print to output
    # Consider using a block (https://docs.ansible.com/ansible/latest/playbook_guide/playbooks_blocks.html) if including the check steps with the creation steps
    # Consider checking for the account using the command module (https://docs.ansible.com/ansible/latest/collections/ansible/builtin/command_module.html)
    # and registering (https://docs.ansible.com/ansible/latest/playbook_guide/playbooks_variables.html#registering-variables) results for the debug/print tasks
    # You can use the debug module to print command output to screen (https://docs.ansible.com/ansible/latest/collections/ansible/builtin/debug_module.html).
    # Consider having a separate task depending on whether the check succeeds or fails.

    - name: Create user, add to admin group as primary, add to wheel group, and confirm user creation
      ansible.builtin.include_role:
        name: add_user

    ### Install packages in a single task: NetworkManager, Chrony, Sysstat, bind-utils and Vim
    # Consider the package module (https://docs.ansible.com/ansible/latest/collections/ansible/builtin/package_module.html)
    # and using a loop (https://docs.ansible.com/ansible/latest/playbook_guide/playbooks_loops.html)


    ### Install, enable and start the Apache (httpd) service and copy index.html to correct directory
    # Consider using the DNF module (https://docs.ansible.com/ansible/latest/collections/ansible/builtin/dnf_module.html) for the package install
    # Consider the service module (https://docs.ansible.com/ansible/latest/collections/ansible/builtin/service_module.html) to enable and start the service
    # Consider using the copy module (https://docs.ansible.com/ansible/latest/collections/ansible/builtin/copy_module.html) to move our HTML file

    - name: Install, enable and start the Apache (httpd) service and copy index.html to correct directory
      ansible.builtin.include_role:
        name: apache_install

    ### Create/update dhclient.conf file
    # Path = /etc/dhcp/dhclient.conf
    # Owner and Group = root
    # Permission/Mode = 0644
    # Consider using the file module (https://docs.ansible.com/ansible/latest/collections/ansible/builtin/file_module.html)


    ### Update dhclient.conf file contents
    # Prepend domain-name-servers 8.8.8.8
    # Consider using the blockinfile module (https://docs.ansible.com/ansible/latest/collections/ansible/builtin/blockinfile_module.html)
    # Consider registering results for the subsequent task
    # Registering variables/results (https://docs.ansible.com/ansible/latest/playbook_guide/playbooks_variables.html#registering-variables)


    ### If dhclient.conf file contents changed, restart NetworkManager service
    # Consider using a conditional using the results registered in the previous task
    # Conditionals (https://docs.ansible.com/ansible/latest/playbook_guide/playbooks_conditionals.html#conditions-based-on-registered-variables)


    ### Depending on RHEL version running, add EPEL repo for RHEL 8 or 9
    # Consider using a conditional to only run a task if the RHEL version is correct for the respective repo
    # Hint: the conditional can use existing ansible_facts (https://docs.ansible.com/ansible/latest/playbook_guide/playbooks_vars_facts.html#ansible-facts)
    # Could we use the ansible_distribution_major_version variable within ansible_facts (e.g. ansible_distribution_major_version | int == <?>)?


    ### Check the current status of FIPS mode and enable FIPS mode, if needed
    # This is likely another use of the command module


    ### Ensure openscap-scanner is installed
